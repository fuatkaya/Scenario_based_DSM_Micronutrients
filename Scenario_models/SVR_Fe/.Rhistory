KhavrSVR_Micro_Zn_RS_Landsat
par(mfrow = c(2,1))
# Internal validation
KhavrSVR_Micro_Zn_RS_Landsat_Internal <- predict(KhavrSVR_Micro_Zn_RS_Landsat, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_RS_Landsat_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Landsat_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_RS_Landsat_External <- predict(KhavrSVR_Micro_Zn_RS_Landsat, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Landsat_External ,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_RS_Landsat_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Landsat_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_RS_Landsat_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Landsat_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
##Sentinel
KhavrSVR_Micro_modeltune_Zn_RS_Sentinel <- tune(svm, Zn ~ Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_RS_Sentinel
KhavrSVR_Micro_Zn_RS_Sentinel <- svm(Zn ~ Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=4)
KhavrSVR_Micro_Zn_RS_Sentinel
# Internal validation
KhavrSVR_Micro_Zn_RS_Sentinel_Internal <- predict(KhavrSVR_Micro_Zn_RS_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_RS_Sentinel_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Sentinel_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_RS_Sentinel_External <- predict(KhavrSVR_Micro_Zn_RS_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Sentinel_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_RS_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_RS_Sentinel_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Sentinel_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
##Landsat+Sentinel
KhavrSVR_Micro_modeltune_Mn_RS_Landsat_Sentinel <- tune(svm, Mn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
##Landsat+Sentinel
KhavrSVR_Micro_modeltune_Zn_RS_Landsat_Sentinel <- tune(svm, Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_RS_Landsat_Sentinel
KhavrSVR_Micro_Zn_RS_Landsat_Sentinel <- svm(Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr
,data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=8, gamma=0.5)
KhavrSVR_Micro_Zn_RS_Landsat_Sentinel
# Internal validation
KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_Internal <- predict(KhavrSVR_Micro_Zn_RS_Landsat_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_External <- predict(KhavrSVR_Micro_Zn_RS_Landsat_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Landsat_Sentinel_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
##RS+Topographic
KhavrSVR_Micro_modeltune_Zn_RS_Topographic <- tune(svm, Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_RS_Topographic
KhavrSVR_Micro_Zn_RS_Topographic <- svm(Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=0.25)
KhavrSVR_Micro_Zn_RS_Topographic
# Internal validation
KhavrSVR_Micro_Zn_RS_Topographic_Internal <- predict(KhavrSVR_Micro_Zn_RS_Topographic, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_RS_Topographic_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Topographic_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_RS_Topographic_External <- predict(KhavrSVR_Micro_Zn_RS_Topographic, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Topographic_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_RS_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_RS_Topographic_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Topographic_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
##RS+Topographic+Climate
KhavrSVR_Micro_modeltune_Zn_RS_Topographic_Climate <- tune(svm, Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_RS_Topographic_Climate
KhavrSVR_Micro_Zn_RS_Topographic_Climate <- svm(Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=4)
KhavrSVR_Micro_Zn_RS_Topographic_Climate
KhavrSVR_Micro_Zn_RS_Topographic_Climate <- svm(Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=0.25)
KhavrSVR_Micro_Zn_RS_Topographic_Climate
# Internal validation
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Internal <- predict(KhavrSVR_Micro_Zn_RS_Topographic_Climate, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Topographic_Climate_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_RS_Topographic_Climate_External <- predict(KhavrSVR_Micro_Zn_RS_Topographic_Climate, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Topographic_Climate_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_RS_Topographic_Climate_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Topographic_Climate_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
###RS+Topographic+Climate+Soil
KhavrSVR_Micro_modeltune_Zn_RS_Topographic_Climate_Soil <- tune(svm, Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_RS_Topographic_Climate_Soil
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil <- svm(Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=0.25)
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil <- svm(Zn ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=0.25)
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil
# Internal validation
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_Internal <- predict(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_External <- predict(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_RS_Topographic_Climate_Soil_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
###Topographic
KhavrSVR_Micro_modeltune_Zn_Topographic <- tune(svm, Zn ~ FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr
, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_Topographic
KhavrSVR_Micro_Zn_Topographic <- svm(Zn ~ FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr
, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=2, gamma=2)
KhavrSVR_Micro_Zn_Topographic
# Internal validation
KhavrSVR_Micro_Zn_Topographic_Internal <- predict(KhavrSVR_Micro_Zn_Topographic, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Zn_Topographic_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Topographic_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_Topographic_External <- predict(KhavrSVR_Micro_Zn_Topographic, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Topographic_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_Topographic_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Topographic_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
###Climate
KhavrSVR_Micro_modeltune_Zn_Climate <- tune(svm, Zn ~  srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_Climate
KhavrSVR_Micro_Zn_Climate <- svm(Zn ~  srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=0.25)
KhavrSVR_Micro_Zn_Climate
# Internal validation
KhavrSVR_Micro_Zn_Climate_Internal <- predict(KhavrSVR_Micro_Zn_Climate, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Climate_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_Climate_External <- predict(KhavrSVR_Micro_Zn_Climate, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Climate_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_Climate_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Climate_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_Climate_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Climate_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
###Soil
KhavrSVR_Micro_modeltune_Zn_Soil <- tune(svm, Zn ~ b2_reflectance + Clay_khavr + pH_khavr + Sand_khavr,data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_Soil
KhavrSVR_Micro_Zn_Soil <- svm(Zn ~ b2_reflectance + Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=2)
KhavrSVR_Micro_Zn_Soil
# Internal validation
KhavrSVR_Micro_Zn_Soil_Internal <- predict(KhavrSVR_Micro_Zn_Soil, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Soil_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_Soil_External <- predict(KhavrSVR_Micro_Zn_Soil, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Soil_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_Soil_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Soil_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_Soil_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Soil_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
#####Recursive Feature Elimination
KhavrSVR_Micro_modeltune_Zn_Rec_Fea_Elimination <- tune(svm, Zn ~ Clay_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Zn_Rec_Fea_Elimination
KhavrSVR_Micro_Zn_Rec_Fea_Elimination <- svm(Zn ~  Clay_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=64, gamma=0.5)
KhavrSVR_Micro_Zn_Rec_Fea_Elimination
# Internal validation
KhavrSVR_Micro_Zn_Rec_Fea_Elimination_Internal <- predict(KhavrSVR_Micro_Zn_Rec_Fea_Elimination, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
goof(observed = SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Rec_Fea_Elimination_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Zn_Rec_Fea_Elimination_External <- predict(KhavrSVR_Micro_Zn_Rec_Fea_Elimination, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Zn_Rec_Fea_Elimination_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Zn_Rec_Fea_Elimination_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Rec_Fea_Elimination_Internal, SVR_Micro_Scenario_models_dataset$Zn[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Zn_Rec_Fea_Elimination_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Zn_Rec_Fea_Elimination_External, SVR_Micro_Scenario_models_dataset$Zn[-Training_SVR_Micro_scenario])
str(SVR_Micro_Scenario_models_dataset)
###Landsat
KhavrSVR_Micro_modeltune_Cu_RS_Landsat <- tune(svm, Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance +
b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_RS_Landsat
KhavrSVR_Micro_Cu_RS_Landsat <- svm(Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh,
data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=0.5, gamma=4)
KhavrSVR_Micro_Cu_RS_Landsat
# Internal validation
KhavrSVR_Micro_Cu_RS_Landsat_Internal <- predict(KhavrSVR_Micro_Cu_RS_Landsat, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Cu_RS_Landsat_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Landsat_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_RS_Landsat_External <- predict(KhavrSVR_Micro_Cu_RS_Landsat, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Landsat_External ,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_RS_Landsat_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Landsat_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_RS_Landsat_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Landsat_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
##Sentinel
KhavrSVR_Micro_modeltune_Cu_RS_Sentinel <- tune(svm, Cu ~ Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_RS_Sentinel
KhavrSVR_MicroCu_RS_Sentinel <- svm(Cu ~ Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=2, gamma=4)
KhavrSVR_MicroCu_RS_Sentinel
# Internal validation
KhavrSVR_MicroCu_RS_Sentinel_Internal <- predict(KhavrSVR_MicroCu_RS_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_MicroCu_RS_Sentinel_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_MicroCu_RS_Sentinel_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_MicroCu_RS_Sentinel_External <- predict(KhavrSVR_MicroCu_RS_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_MicroCu_RS_Sentinel_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_MicroCu_RS_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_MicroCu_RS_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_MicroCu_RS_Sentinel_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_MicroCu_RS_Sentinel_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
##Landsat+Sentinel
KhavrSVR_Micro_modeltune_Cu_RS_Landsat_Sentinel <- tune(svm, Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr,
data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_RS_Landsat_Sentinel
KhavrSVR_Micro_Cu_RS_Landsat_Sentinel <- svm(Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr
,data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=4)
KhavrSVR_Micro_Cu_RS_Landsat_Sentinel
# Internal validation
KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_Internal <- predict(KhavrSVR_Micro_Cu_RS_Landsat_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_External <- predict(KhavrSVR_Micro_Cu_RS_Landsat_Sentinel, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Landsat_Sentinel_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
##RS+Topographic
KhavrSVR_Micro_modeltune_Cu_RS_Topographic <- tune(svm, Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_RS_Topographic
KhavrSVR_Micro_Cu_RS_Topographic <- svm(Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance +
ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi +
ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=1, gamma=4)
KhavrSVR_Micro_Cu_RS_Topographic
# Internal validation
KhavrSVR_Micro_Cu_RS_Topographic_Internal <- predict(KhavrSVR_Micro_Cu_RS_Topographic, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Cu_RS_Topographic_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Topographic_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_RS_Topographic_External <- predict(KhavrSVR_Micro_Cu_RS_Topographic, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Topographic_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_RS_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_RS_Topographic_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Topographic_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
##RS+Topographic+Climate
KhavrSVR_Micro_modeltune_Cu_RS_Topographic_Climate <- tune(svm, Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_RS_Topographic_Climate
KhavrSVR_Micro_Cu_RS_Topographic_Climate <- svm(Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=2, gamma=4)
KhavrSVR_Micro_Cu_RS_Topographic_Climate
# Internal validation
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Internal <- predict(KhavrSVR_Micro_Cu_RS_Topographic_Climate, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Topographic_Climate_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_RS_Topographic_Climate_External <- predict(KhavrSVR_Micro_Cu_RS_Topographic_Climate, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Topographic_Climate_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_RS_Topographic_Climate_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Topographic_Climate_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
###RS+Topographic+Climate+Soil
KhavrSVR_Micro_modeltune_Cu_RS_Topographic_Climate_Soil <- tune(svm, Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_RS_Topographic_Climate_Soil
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil <- svm(Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B04_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=4)
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil
# Internal validation
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_Internal <- predict(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_External <- predict(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_RS_Topographic_Climate_Soil_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
###Topographic
KhavrSVR_Micro_modeltune_Cu_Topographic <- tune(svm, Cu ~ FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr
, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_Topographic
KhavrSVR_Micro_Cu_Topographic <- svm(Cu ~ FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr
, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=0.5, gamma=0.5)
KhavrSVR_Micro_Cu_Topographic
# Internal validation
KhavrSVR_Micro_Cu_Topographic_Internal <- predict(KhavrSVR_Micro_Cu_Topographic, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
KhavrSVR_Micro_Cu_Topographic_Internal
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Topographic_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_Topographic_External <- predict(KhavrSVR_Micro_Cu_Topographic, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Topographic_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Topographic_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_Topographic_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Topographic_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
###Climate
KhavrSVR_Micro_modeltune_Cu_Climate <- tune(svm, Cu ~  srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_Climate
KhavrSVR_Micro_Cu_Climate <- svm(Cu ~  srad_khavr + bio_15_khavr + bio_12_khavr + bio_1_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=2, gamma=2)
KhavrSVR_Micro_Cu_Climate
# Internal validation
KhavrSVR_Micro_Cu_Climate_Internal <- predict(KhavrSVR_Micro_Cu_Climate, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Climate_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_Climate_External <- predict(KhavrSVR_Micro_Cu_Climate, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Climate_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_Climate_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Climate_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_Climate_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Climate_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
###Soil
KhavrSVR_Micro_modeltune_Cu_Soil <- tune(svm, Cu ~ b2_reflectance + Clay_khavr + pH_khavr + Sand_khavr,data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_Soil
KhavrSVR_Micro_Cu_Soil <- svm(Cu ~ b2_reflectance + Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost0.125, gamma=0.25)
KhavrSVR_Micro_Cu_Soil <- svm(Cu ~ b2_reflectance + Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost= 0.125, gamma=0.25)
KhavrSVR_Micro_Cu_Soil
# Internal validation
KhavrSVR_Micro_Cu_Soil_Internal <- predict(KhavrSVR_Micro_Cu_Soil, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Soil_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_Soil_External <- predict(KhavrSVR_Micro_Cu_Soil, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Soil_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_Soil_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Soil_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_Soil_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Soil_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
#####Recursive Feature Elimination
KhavrSVR_Micro_modeltune_Cu_Rec_Fea_Elimination <- tune(svm, Cu ~ b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset,
kernel = "radial",
ranges = list(gamma= 2^(-2:2), cost = 2^(-4:10)),
tune.control=tune.control(cross = 5))
KhavrSVR_Micro_modeltune_Cu_Rec_Fea_Elimination
KhavrSVR_Micro_Cu_Rec_Fea_Elimination <- svm(Cu ~  b2_reflectance + b3_reflectance + b4_reflectance + b5_reflectance + b6_reflectance + b7_reflectance + ci_mean_kh + gndvi_mean_kh + ndvi_mean_kh + satind_mean_kh + sgsi_mean_kh +
Sen_B02_30m_aoi + Sen_B03_Mean_30m_aoi + Sen_B05_Mean_30m_aoi + Sen_B06_Mean_30m_aoi + Sen_B07_Mean_30m_aoi + Sen_B08_Mean_30m_aoi + Sen_B08A_Mean_30m_aoi + Sen_B11_Mean_30m_aoi + Sen_B12_Mean_30m_aoi + ClayInd_Mean_Sentinel_khavr + GNDVI_Mean_Sentinel_khavr + MSAVI2_Mean_Sentinel_khavr + NDVI_Mean_Sentinel_khavr + Saturation_Mean_Sentinel_khavr + SGSI_Mean_Sentinel_khavr +
FlowAcc_kh + PlanCur_kh + ProflCur_kh + slope_kh + spi_kh + Twi_kh + aoi_dem_clip_khavr +
bio_15_khavr + bio_12_khavr + bio_1_khavr +
Clay_khavr + pH_khavr + Sand_khavr, data = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ], kernel="radial", cost=4, gamma=4)
KhavrSVR_Micro_Cu_Rec_Fea_Elimination
# Internal validation
KhavrSVR_Micro_Cu_Rec_Fea_Elimination_Internal <- predict(KhavrSVR_Micro_Cu_Rec_Fea_Elimination, newdata = SVR_Micro_Scenario_models_dataset[Training_SVR_Micro_scenario, ])
goof(observed = SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Rec_Fea_Elimination_Internal ,  plot.it = TRUE)
# externalvalidation
KhavrSVR_Micro_Cu_Rec_Fea_Elimination_External <- predict(KhavrSVR_Micro_Cu_Rec_Fea_Elimination, newdata = SVR_Micro_Scenario_models_dataset[-Training_SVR_Micro_scenario, ])
goof(observed =  SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario], predicted = KhavrSVR_Micro_Cu_Rec_Fea_Elimination_External,  plot.it = TRUE)
#training
nrmse(KhavrSVR_Micro_Cu_Rec_Fea_Elimination_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Rec_Fea_Elimination_Internal, SVR_Micro_Scenario_models_dataset$Cu[Training_SVR_Micro_scenario])
##testing
nrmse(KhavrSVR_Micro_Cu_Rec_Fea_Elimination_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
MAPE(KhavrSVR_Micro_Cu_Rec_Fea_Elimination_External, SVR_Micro_Scenario_models_dataset$Cu[-Training_SVR_Micro_scenario])
